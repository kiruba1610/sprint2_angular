{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CertificateService {\n  constructor(http) {\n    this.http = http;\n    this.API = \"http://localhost:8080\"; // API base URL\n  }\n  // Method to register a new certificate\n  registerCertificate(certificateData) {\n    return this.http.post(`${this.API}/certificateservice`, certificateData); // Correct string interpolation with backticks\n  }\n  // Method to get all certificates\n  getCertificates() {\n    return this.http.get(`${this.API}/certificateservice`); // Correct string interpolation\n  }\n  // Method to delete a certificate by its ID\n  deleteCertificate(certificateId) {\n    return this.http.delete(`${this.API}/certificateservice/${certificateId}`); // Correct string interpolation\n  }\n  // Method to update a certificate\n  updateCertificate(certificate) {\n    return this.http.put(`${this.API}/certificateservice/${certificate.id}`, certificate); // Correct string interpolation\n  }\n}\n\nCertificateService.ɵfac = function CertificateService_Factory(t) {\n  return new (t || CertificateService)(i0.ɵɵinject(i1.HttpClient));\n};\nCertificateService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CertificateService,\n  factory: CertificateService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,kBAAkB;EAG7BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,QAAG,GAAG,uBAAuB,CAAC,CAAE;EAEQ;EAExC;EACOC,mBAAmB,CAACC,eAAoB;IAC7C,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACC,GAAG,qBAAqB,EAAEF,eAAe,CAAC,CAAC,CAAE;EAC7E;EAEA;EACOG,eAAe;IACpB,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACF,GAAG,qBAAqB,CAAC,CAAC,CAAE;EAC3D;EAEA;EACOG,iBAAiB,CAACC,aAAkB;IACzC,OAAO,IAAI,CAACR,IAAI,CAACS,MAAM,CAAC,GAAG,IAAI,CAACL,GAAG,uBAAuBI,aAAa,EAAE,CAAC,CAAC,CAAE;EAC/E;EAEA;EACOE,iBAAiB,CAACC,WAAgB;IACvC,OAAO,IAAI,CAACX,IAAI,CAACY,GAAG,CAAC,GAAG,IAAI,CAACR,GAAG,uBAAuBO,WAAW,CAACE,EAAE,EAAE,EAAEF,WAAW,CAAC,CAAC,CAAE;EAC1F;;;AAvBWb,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;SAAlBA,kBAAkB;EAAAgB,SAAlBhB,kBAAkB;EAAAiB,YAFjB;AAAM","names":["CertificateService","constructor","http","registerCertificate","certificateData","post","API","getCertificates","get","deleteCertificate","certificateId","delete","updateCertificate","certificate","put","id","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Dell\\Desktop\\front\\SpringBoot2-main\\src\\app\\certificate.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CertificateService {\r\n  API = \"http://localhost:8080\";  // API base URL\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Method to register a new certificate\r\n  public registerCertificate(certificateData: any) {\r\n    return this.http.post(`${this.API}/certificateservice`, certificateData);  // Correct string interpolation with backticks\r\n  }\r\n\r\n  // Method to get all certificates\r\n  public getCertificates() {\r\n    return this.http.get(`${this.API}/certificateservice`);  // Correct string interpolation\r\n  }\r\n\r\n  // Method to delete a certificate by its ID\r\n  public deleteCertificate(certificateId: any) {\r\n    return this.http.delete(`${this.API}/certificateservice/${certificateId}`);  // Correct string interpolation\r\n  }\r\n\r\n  // Method to update a certificate\r\n  public updateCertificate(certificate: any) {\r\n    return this.http.put(`${this.API}/certificateservice/${certificate.id}`, certificate);  // Correct string interpolation\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}